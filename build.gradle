
apply plugin: 'java'
apply plugin: 'com.dictanova.jcasgen'

buildscript {
    repositories {
      maven {
        url 'https://plugins.gradle.org/m2/'
      }
    }
    dependencies {
        classpath 'gradle.plugin.com.dictanova.jcasgen.gradle:gradle-jcasgen-plugin:0.4'
    }
}

allprojects {
    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()
    }
}

generateTypeSystem.destinationDir = project.file("src/main/java")
clean.doLast {
    project.delete(fileTree(dir: 'src/main/java/dictanova'))
    println 'Cleaning typesystem generated sources.'
}

generateTypeSystem.doLast {
    project.delete(fileTree(dir: 'src/main/java/org/apache/uima/examples'))
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

compileJava {
    dependsOn generateTypeSystem
}

dependencies {
    compile 'org.yaml:snakeyaml:1.15'
    compile 'org.apache.uima:uimaj-core:2.7.0'
    compile 'org.apache.uima:uimaj-cpe:2.7.0'
    compile 'org.apache.uima:uimaj-document-annotation:2.7.0'
    compile('org.apache.uima:uimafit-core:2.1.0') { exclude group: 'org.apache.uima' }
    compile('org.apache.uima:uimafit-cpe:2.1.0') { exclude group: 'org.apache.uima' }
}
